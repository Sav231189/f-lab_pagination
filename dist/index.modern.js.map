{"version":3,"file":"index.modern.js","sources":["../src/Pagination.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport s from './Pagination.module.scss'\n\nexport function Pagination({\n  totalPageCount = 1,\n  pageSize = 1,\n  pageActiveNumber = 1,\n  countShowItem = 1,\n  firstPageBtn = true,\n  lastPageBtn = true,\n  prevPageBtn = false,\n  nextPageBtn = false,\n  ellipsisBtn = false,\n  showLastPage = false,\n  changePage = new Function()\n}) {\n  // проверка что активная страница не больше колличества страниц.\n  if (totalPageCount / pageSize < pageActiveNumber) pageActiveNumber = 1\n  // массив страниц пагинации.\n  const [paginationItemList, setPaginationItemList] = useState([])\n  // общее количество порций.\n  const [portionCount, setPortionCount] = useState(1)\n  // активная порция.\n  const [activePortion, setActivePortion] = useState(1)\n  // инициализация paginationItemList / paginationItemList / activePortion.\n  useEffect(() => {\n    const countPagination = Math.ceil(totalPageCount / pageSize)\n    const portionCount = Math.ceil(countPagination / countShowItem)\n    const activePortion = Math.ceil(pageActiveNumber / countShowItem) - 1\n    const paginationItemList = []\n    for (let i = 1; i <= countPagination; i++) {\n      paginationItemList.push(i)\n    }\n    setPaginationItemList(paginationItemList)\n    setPortionCount(portionCount)\n    setActivePortion(activePortion)\n  }, [totalPageCount, pageSize, pageActiveNumber])\n  // обработка кликов в пагинации.\n  const setActivePage = (e) => {\n    switch (e.target.innerHTML) {\n      case ' « ':\n        if (activePortion > 1) changePage(1)\n        break\n      case ' ‹ ':\n        if (pageActiveNumber !== 1)\n          if (pageActiveNumber > 1) changePage(pageActiveNumber - 1)\n        break\n      case ' › ':\n        if (pageActiveNumber !== paginationItemList.length)\n          changePage(pageActiveNumber + 1)\n        break\n      case ' » ':\n        if (activePortion !== portionCount - 1)\n          changePage(paginationItemList.length)\n        break\n      case ' ... ':\n        if (e.target.hasAttribute('prev')) {\n          changePage((activePortion - 1) * countShowItem + 1)\n        } else {\n          changePage((activePortion + 1) * countShowItem + 1)\n        }\n        break\n      default:\n        changePage(e.target.innerHTML)\n    }\n  }\n\n  return (\n    <div className={s.Pagination}>\n      {firstPageBtn && (\n        <div\n          onClick={setActivePage}\n          className={\n            s.firstPageBtn + ' ' + (activePortion > 1 ? false : s.disabled)\n          }\n        >\n          {' '}\n          {'«'}{' '}\n        </div>\n      )}\n      {prevPageBtn && (\n        <div\n          onClick={setActivePage}\n          className={\n            s.prevPageBtn + ' ' + (pageActiveNumber === 1 ? s.disabled : false)\n          }\n        >\n          {' '}\n          {'‹'}{' '}\n        </div>\n      )}\n\n      <div className={s.pagesBox}>\n        {ellipsisBtn && activePortion > 0 && (\n          <div onClick={setActivePage} className={s.ellipsisFirstBtn} prev=''>\n            {' '}\n            {'...'}{' '}\n          </div>\n        )}\n        {paginationItemList\n          .filter(\n            (el) =>\n              el > activePortion * countShowItem &&\n              el < activePortion * countShowItem + countShowItem + 1\n          )\n          .map((el) =>\n            el === pageActiveNumber ? (\n              <div key={el} className={s.pageNumber + ' ' + s.active}>\n                {el}\n              </div>\n            ) : (\n              <div key={el} onClick={setActivePage} className={s.pageNumber}>\n                {el}\n              </div>\n            )\n          )}\n        {ellipsisBtn && activePortion + 1 < portionCount && (\n          <div onClick={setActivePage} className={s.ellipsisLastBtn} next=''>\n            {' '}\n            {'...'}{' '}\n          </div>\n        )}\n        {showLastPage && ellipsisBtn && activePortion < portionCount - 1 && (\n          <div onClick={setActivePage} className={s.pageNumber}>\n            {paginationItemList.length}\n          </div>\n        )}\n      </div>\n\n      {nextPageBtn && (\n        <div\n          onClick={setActivePage}\n          className={\n            s.nextPageBtn +\n            ' ' +\n            (pageActiveNumber === paginationItemList.length\n              ? s.disabled\n              : false)\n          }\n        >\n          {' '}\n          {'›'}{' '}\n        </div>\n      )}\n      {lastPageBtn && (\n        <div\n          onClick={setActivePage}\n          className={\n            s.lastPageBtn +\n            ' ' +\n            (activePortion === portionCount - 1 ? s.disabled : false)\n          }\n        >\n          {' '}\n          {'»'}{' '}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Pagination\n"],"names":["Pagination","totalPageCount","pageSize","pageActiveNumber","countShowItem","firstPageBtn","lastPageBtn","prevPageBtn","nextPageBtn","ellipsisBtn","showLastPage","changePage","Function","useState","paginationItemList","setPaginationItemList","portionCount","setPortionCount","activePortion","setActivePortion","useEffect","countPagination","Math","ceil","i","push","setActivePage","e","target","innerHTML","length","hasAttribute","s","disabled","pagesBox","ellipsisFirstBtn","filter","el","map","pageNumber","active","ellipsisLastBtn"],"mappings":"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"}